{"ast":null,"code":"/* 此文件专门用于创建整个项目的路由器 */\n//导入vueRouter\nimport VueRouter from \"vue-router\"; //引入组件\n\nimport About from '../pages/About';\nimport Home from '../pages/Home';\nimport News from '../pages/News';\nimport Message from '../pages/Message';\nimport Detail from '../pages/Detail'; //创建路由器\n\nvar router = new VueRouter({\n  routes: [{\n    name: 'about',\n    path: '/about',\n    component: About\n  }, {\n    name: 'home',\n    path: '/home',\n    component: Home,\n    children: [{\n      name: 'news',\n      path: 'news',\n      component: News,\n      meta: {\n        isAuth: true\n      }\n    }, {\n      name: 'message',\n      path: 'message',\n      component: Message,\n      meta: {\n        isAuth: true\n      },\n      children: [{\n        name: 'detail',\n        path: 'detail/:id/:title',\n        component: Detail,\n        //props的第一种写法，值为对象。\n        //该对象中的所有key-value都会以props的形式传给Detail组件\n        // props: {a:'1',b:'hello'}\n        //props的第二种写法，值为布尔值\n        //若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给Detail组件\n        // props: true\n        //props的第三种写法，值为函数\n        //\n        props: function props($route) {\n          return {\n            id: $route.params.id,\n            title: $route.params.title\n          };\n        }\n      }]\n    }]\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.meta.isAuth) {\n    if (localStorage.getItem('school') === 'atguigu') {\n      next();\n    } else alert('无权限访问！');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["VueRouter","About","Home","News","Message","Detail","router","routes","name","path","component","children","meta","isAuth","props","$route","id","params","title","beforeEach","to","from","next","localStorage","getItem","alert"],"sources":["D:/Java/Frame/vue/vue_project/src/router/index.js"],"sourcesContent":["/* 此文件专门用于创建整个项目的路由器 */\r\n\r\n//导入vueRouter\r\nimport VueRouter from \"vue-router\";\r\n//引入组件\r\nimport About from '../pages/About'\r\nimport Home from '../pages/Home'\r\nimport News from '../pages/News'\r\nimport Message from '../pages/Message'\r\nimport Detail from '../pages/Detail'\r\n\r\n//创建路由器\r\nconst router = new VueRouter({\r\n    routes: [\r\n        {\r\n            name: 'about',\r\n            path: '/about',\r\n            component: About\r\n        },\r\n        {\r\n            name: 'home',\r\n            path: '/home',\r\n            component: Home,\r\n            children: [\r\n                {\r\n                    name: 'news',\r\n                    path: 'news',\r\n                    component: News,\r\n                    meta: {isAuth: true}\r\n                },\r\n                {\r\n                    name: 'message',\r\n                    path: 'message',\r\n                    component: Message,\r\n                    meta: {isAuth: true},\r\n                    children: [\r\n                        {\r\n                            name: 'detail',\r\n                            path: 'detail/:id/:title',\r\n                            component: Detail,\r\n\r\n                            //props的第一种写法，值为对象。\r\n                            //该对象中的所有key-value都会以props的形式传给Detail组件\r\n                            // props: {a:'1',b:'hello'}\r\n\r\n                            //props的第二种写法，值为布尔值\r\n                            //若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给Detail组件\r\n                            // props: true\r\n\r\n                            //props的第三种写法，值为函数\r\n                            //\r\n                            props($route) {\r\n                                return {\r\n                                    id:$route.params.id, title:$route.params.title\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n})\r\n\r\nrouter.beforeEach((to,from,next) => {\r\n    if(to.meta.isAuth) {\r\n        if(localStorage.getItem('school') === 'atguigu') {\r\n            next()\r\n        } else alert('无权限访问！')\r\n    } else {\r\n        next()\r\n    }\r\n})\r\n\r\nexport default router"],"mappings":"AAAA;AAEA;AACA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;;AACA,IAAMC,MAAM,GAAG,IAAIN,SAAJ,CAAc;EACzBO,MAAM,EAAE,CACJ;IACIC,IAAI,EAAE,OADV;IAEIC,IAAI,EAAE,QAFV;IAGIC,SAAS,EAAET;EAHf,CADI,EAMJ;IACIO,IAAI,EAAE,MADV;IAEIC,IAAI,EAAE,OAFV;IAGIC,SAAS,EAAER,IAHf;IAIIS,QAAQ,EAAE,CACN;MACIH,IAAI,EAAE,MADV;MAEIC,IAAI,EAAE,MAFV;MAGIC,SAAS,EAAEP,IAHf;MAIIS,IAAI,EAAE;QAACC,MAAM,EAAE;MAAT;IAJV,CADM,EAON;MACIL,IAAI,EAAE,SADV;MAEIC,IAAI,EAAE,SAFV;MAGIC,SAAS,EAAEN,OAHf;MAIIQ,IAAI,EAAE;QAACC,MAAM,EAAE;MAAT,CAJV;MAKIF,QAAQ,EAAE,CACN;QACIH,IAAI,EAAE,QADV;QAEIC,IAAI,EAAE,mBAFV;QAGIC,SAAS,EAAEL,MAHf;QAKI;QACA;QACA;QAEA;QACA;QACA;QAEA;QACA;QACAS,KAfJ,iBAeUC,MAfV,EAekB;UACV,OAAO;YACHC,EAAE,EAACD,MAAM,CAACE,MAAP,CAAcD,EADd;YACkBE,KAAK,EAACH,MAAM,CAACE,MAAP,CAAcC;UADtC,CAAP;QAGH;MAnBL,CADM;IALd,CAPM;EAJd,CANI;AADiB,CAAd,CAAf;AAoDAZ,MAAM,CAACa,UAAP,CAAkB,UAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,EAAkB;EAChC,IAAGF,EAAE,CAACR,IAAH,CAAQC,MAAX,EAAmB;IACf,IAAGU,YAAY,CAACC,OAAb,CAAqB,QAArB,MAAmC,SAAtC,EAAiD;MAC7CF,IAAI;IACP,CAFD,MAEOG,KAAK,CAAC,QAAD,CAAL;EACV,CAJD,MAIO;IACHH,IAAI;EACP;AACJ,CARD;AAUA,eAAehB,MAAf"},"metadata":{},"sourceType":"module"}